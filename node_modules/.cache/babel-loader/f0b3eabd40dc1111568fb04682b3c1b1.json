{"ast":null,"code":"import _slicedToArray from \"/Users/amyriley/workspace_react/share-places/share-places-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amyriley/workspace_react/share-places/share-places-frontend/src/places/pages/UpdatePlace.js\";\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './PlaceForm.css';\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: 'Empire State Building',\n  description: 'One of the most famous sky scrapers in the world!',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: 'Empire State Building',\n  description: 'One of the most famous sky scrapers in the world!',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u2'\n}];\n\nconst UpdatePlace = () => {\n  const placeId = useParams().placeId;\n\n  const _useForm = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false),\n        _useForm2 = _slicedToArray(_useForm, 3),\n        formState = _useForm2[0],\n        inputHandler = _useForm2[1],\n        setFormData = _useForm2[2];\n\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  useEffect(() => {\n    setFormData({\n      title: {\n        value: identifiedPlace.title,\n        isValid: true\n      },\n      description: {\n        value: identifiedPlace.description,\n        isValid: true\n      }\n    }, true);\n  }, [setFormData, identifiedPlace]);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (!identifiedPlace) {\n    return React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Could not find place!\"));\n  }\n\n  if (!formState.inputs.title.value) {\n    return React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n  return React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.title.value,\n    initialValid: formState.inputs.title.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (min length 5 characters).\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.description.value,\n    initialValid: formState.inputs.description.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"UPDATE PLACE\"));\n};\n\nexport default UpdatePlace;","map":{"version":3,"sources":["/Users/amyriley/workspace_react/share-places/share-places-frontend/src/places/pages/UpdatePlace.js"],"names":["React","useEffect","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","placeId","value","isValid","formState","inputHandler","setFormData","identifiedPlace","find","p","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './PlaceForm.css';\n\nconst DUMMY_PLACES = [\n    {\n        id: 'p1',\n        title: 'Empire State Building',\n        description: 'One of the most famous sky scrapers in the world!',\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u1'\n    },\n    {\n        id: 'p2',\n        title: 'Empire State Building',\n        description: 'One of the most famous sky scrapers in the world!',\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u2'\n    }\n]\n\nconst UpdatePlace = () => {\n    const placeId = useParams().placeId;\n\n    const [formState, inputHandler, setFormData ] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        }\n    }, false);\n\n    const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n\n    useEffect(() => {\n        setFormData({\n            title: {\n                value: identifiedPlace.title,\n                isValid: true\n            },\n            description: {\n                value: identifiedPlace.description,\n                isValid: true\n            }\n        }, true)\n    }, [setFormData, identifiedPlace]);\n\n    const placeUpdateSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs);\n    }\n\n    if (!identifiedPlace) {\n        return (\n            <div className=\"center\">\n                <h2>Could not find place!</h2>\n            </div>\n        )\n    }\n\n    if (!formState.inputs.title.value) {\n        return (\n            <div className=\"center\">\n                <h2>Loading...</h2>\n            </div>\n        )\n    }\n\n    return (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n            <Input \n                id=\"title\"\n                element=\"input\"\n                type=\"text\"\n                label=\"Title\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a valid title.\"\n                onInput={inputHandler}\n                initialValue={formState.inputs.title.value}\n                initialValid={formState.inputs.title.isValid}\n            />\n            <Input \n                id=\"description\"\n                element=\"textarea\"\n                label=\"Description\"\n                validators={[VALIDATOR_MINLENGTH(5)]}\n                errorText=\"Please enter a valid description (min length 5 characters).\"\n                onInput={inputHandler}\n                initialValue={formState.inputs.description.value}\n                initialValid={formState.inputs.description.isValid}\n            />\n            <Button type=\"submit\" disabled={!formState.isValid}>\n                UPDATE PLACE\n            </Button>\n        </form>\n    )\n}\n\nexport default UpdatePlace;"]},"metadata":{},"sourceType":"module"}