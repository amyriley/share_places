{"ast":null,"code":"import _objectSpread from \"/Users/amyriley/workspace_react/share-places/share-places-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/amyriley/workspace_react/share-places/share-places-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amyriley/workspace_react/share-places/share-places-frontend/src/user/pages/Auth.js\";\nimport React, { useState, useContext } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_EMAIL, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoginMode = _useState2[0],\n        setIsLoginMode = _useState2[1];\n\n  const _useForm = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false),\n        _useForm2 = _slicedToArray(_useForm, 3),\n        formState = _useForm2[0],\n        inputHandler = _useForm2[1],\n        setFormData = _useForm2[2];\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(_objectSpread({}, formState.inputs, {\n        name: undefined\n      }), formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData(_objectSpread({}, formState.inputs, {\n        name: {\n          value: '',\n          isValid: false\n        }\n      }), false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    auth.login();\n  };\n\n  return React.createElement(Card, {\n    className: \"authentication\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Login Required\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, !isLoginMode && React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    type: \"email\",\n    label: \"Email\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password (min length 5 characters).\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, isLoginMode ? 'SWITCH TO SIGNUP' : 'SWITCH TO  LOGIN'));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/amyriley/workspace_react/share-places/share-places-frontend/src/user/pages/Auth.js"],"names":["React","useState","useContext","Input","Button","Card","useForm","AuthContext","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","VALIDATOR_REQUIRE","Auth","auth","isLoginMode","setIsLoginMode","email","value","isValid","password","formState","inputHandler","setFormData","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","console","log","login"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_EMAIL, VALIDATOR_REQUIRE } from '../../shared/util/validators';\n\nimport './Auth.css';\n\nconst Auth = () => {\n    const auth = useContext(AuthContext);\n\n    const [isLoginMode, setIsLoginMode] = useState(true);\n\n    const [formState, inputHandler, setFormData ] = useForm({\n        email: {\n            value: '',\n            isValid: false\n        },\n        password: {\n            value: '',\n            isValid: false\n        }\n    },\n    false\n    );\n\n    const switchModeHandler = () => {\n        if (!isLoginMode) {\n            setFormData({\n                ...formState.inputs,\n                name: undefined\n            }, \n            formState.inputs.email.isValid && formState.inputs.password.isValid\n            );\n        } else {\n            setFormData({\n                ...formState.inputs,\n                name: {\n                    value: '',\n                    isValid: false\n                }\n            }, \n            false\n            );\n        }\n        setIsLoginMode(prevMode => !prevMode);\n    }\n\n    const authSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs);\n        auth.login();\n    }\n\n    return (\n        <Card className=\"authentication\">\n            <h2>Login Required</h2>\n            <hr />\n            <form onSubmit={authSubmitHandler}>\n                {!isLoginMode && (\n                    <Input \n                        element=\"input\" \n                        id=\"name\" \n                        type=\"text\" \n                        label=\"Your Name\" \n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter a name\"\n                        onInput={inputHandler}\n                    />\n                )}\n                <Input \n                    id=\"email\"\n                    element=\"input\"\n                    type=\"email\"\n                    label=\"Email\"\n                    validators={[VALIDATOR_EMAIL()]}\n                    errorText=\"Please enter a valid email address.\"\n                    onInput={inputHandler}\n                />\n                <Input \n                    id=\"password\"\n                    element=\"input\"\n                    type=\"password\"\n                    label=\"Password\"\n                    validators={[VALIDATOR_MINLENGTH(5)]}\n                    errorText=\"Please enter a valid password (min length 5 characters).\"\n                    onInput={inputHandler}\n                />\n                <Button type=\"submit\" disabled={!formState.isValid}>\n                    {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n                </Button>\n            </form>\n            <Button inverse onClick={switchModeHandler}>\n                {isLoginMode ? 'SWITCH TO SIGNUP' : 'SWITCH TO  LOGIN'}\n            </Button>\n        </Card>\n    )\n};\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}